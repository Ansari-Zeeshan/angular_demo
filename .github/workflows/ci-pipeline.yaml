name: CI Pipeline

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Lint Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Use the Node.js version you're using

      - name: Install Dependencies
        run: npm install

      - name: Run Linting
        run: npm run lint

      - name: Run Unit Tests
        run: npm test

  sonarQubeScan:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Sonar Scanner
        run: |
          curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip -o sonar-scanner.zip
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-4.7.0.2747-linux/bin" >> $GITHUB_PATH

      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=angular_demo \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  mergeCheck:
    name: Merge Validation
    runs-on: ubuntu-latest
    needs: [build, sonarQubeScan]

    steps:
      - name: Check SonarQube Quality Gate
        run: |
          if [ "$(curl -s -u ${{ secrets.SONAR_TOKEN }}:${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=angular_demo | jq -r '.projectStatus.status')" != "OK" ]; then
            echo "SonarQube Quality Gate failed."
            exit 1
          fi
